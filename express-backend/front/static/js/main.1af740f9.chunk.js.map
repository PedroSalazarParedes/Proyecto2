{"version":3,"sources":["Explorer/Explorer.jsx","Recipe/Recipe.jsx","Login/Login.jsx","Search/Ingredient/Ingredient.jsx","Search/Result/Result.jsx","Search/Search.jsx","Create/Create.jsx","App.js","serviceWorker.js","index.js"],"names":["Explorer","props","state","recipes","clickRecipe","bind","a","fetch","req","json","data","setState","recipe","goToRecipe","id","this","map","r","i","key","onClick","_fields","properties","title","src","image","alt","className","servings","pricePerServing","React","Component","Recipe","undefined","encodeURIComponent","parseRecipe","nodes","rels","segments","flat","forEach","relKey","relationship","start","end","identity","Object","values","filter","n","labels","type","si","step","ingredients","push","meta","equipment","steps","s","toRender","healthScore","href","source","sourceName","keys","k","text","index","name","join","amount","measures_metric_unitLong","e","Login","placeholder","Ingredient","active","selectIngredientHandler","prevState","newIngredientHandler","ingredient","Result","updateIngredient","search","pos","length","method","headers","body","JSON","stringify","sort","b","d","extras","Search","searchCriteria","searchCriteriaHandler","resultRef","createRef","ings","records","toLowerCase","sc","searchInput","ref","Create","App","goTo","menu","actualMenu","actualRecipe","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1af740f9.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './explorer.css';\r\n\r\nexport default class Explorer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { recipes: [] };\r\n    this.clickRecipe = this.clickRecipe.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const api = 'http://localhost:3001/api/recipes/all';\r\n    (async () => {\r\n      const req = await fetch(api);\r\n      const data = await req.json();\r\n      this.setState({ recipes: data });\r\n    })();\r\n  }\r\n\r\n  clickRecipe(recipe) {\r\n    return () => this.props.goToRecipe(recipe);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"recipes-explorer-container\">\r\n        {this.state.recipes.map((r, i) => {\r\n          return (\r\n            <div key={i} onClick={this.clickRecipe(r)}>\r\n              <span>{r._fields[0].properties.title}</span>\r\n              <img src={r._fields[0].properties.image} alt={r._fields[0].properties.image}/>\r\n              <div className=\"recipe-item-footer\">\r\n                <div>\r\n                  <i className=\"fas fa-utensils\"></i>\r\n                  <span>{r._fields[0].properties.servings}</span>\r\n                </div>\r\n                <div>\r\n                  <i className=\"fas fa-dollar-sign\"></i>\r\n                  <span>{r._fields[0].properties.pricePerServing}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExplorer.propTypes = {\r\n  goToRecipe: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './recipe.css';\r\n\r\nexport default class Recipe extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      recipe: undefined\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const title = '_fields' in this.props.recipe ? this.props.recipe._fields[0].properties.title : this.props.recipe.title;\r\n    (async () => {\r\n      const req = await fetch(`http://localhost:3001/api/recipes/${encodeURIComponent(title)}`);\r\n      const data = await req.json();\r\n      this.parseRecipe(data);\r\n    })();\r\n  }\r\n\r\n  parseRecipe(data) {\r\n    const nodes = {};\r\n    const rels = {};\r\n\r\n    data\r\n      .map(i => i._fields[0].segments)\r\n      .flat()\r\n      .forEach(i => {\r\n        const relKey = `${i.relationship.start}->${i.relationship.end}`;\r\n        if (!(i.end.identity in nodes)) {\r\n          nodes[i.end.identity] = i.end;\r\n        }\r\n        if (!(i.start.identity in nodes)) {\r\n          nodes[i.start.identity] = i.start;\r\n        }\r\n        if (!(relKey in rels)) {\r\n          rels[relKey] = i.relationship;\r\n        }\r\n      });\r\n\r\n    const recipe = Object.values(nodes).filter(n => n.labels[0] === 'Recipe')[0].properties;\r\n\r\n    Object.values(rels)\r\n      .filter(r => r.type === 'StepIngredient')\r\n      .forEach(si => {\r\n        const step = nodes[si.start];\r\n        if (!('ingredients' in step.properties)) {\r\n          step.properties.ingredients = [];\r\n        }\r\n        step.properties.ingredients.push({ ...nodes[si.end].properties, meta: si.properties });\r\n      });\r\n\r\n    Object.values(rels)\r\n      .filter(r => r.type === 'StepEquipment')\r\n      .forEach(si => {\r\n        const step = nodes[si.start];\r\n        if (!('equipment' in step.properties)) {\r\n          step.properties.equipment = [];\r\n        }\r\n        step.properties.equipment.push({ ...nodes[si.end].properties, meta: si.properties });\r\n      });\r\n\r\n    recipe.steps = {};\r\n    Object.values(rels)\r\n      .filter(r => r.type === 'StepLink')\r\n      .forEach(s => recipe.steps[s.properties.step] = nodes[s.end].properties);\r\n\r\n    this.setState({ recipe });\r\n  }\r\n\r\n  render() {\r\n    let toRender = (\r\n      <div>\r\n        Loading...\r\n      </div>\r\n    );\r\n    if (this.state.recipe) {\r\n      toRender = (\r\n        <div id=\"recipe-container\">\r\n          <div>\r\n            <div>\r\n              <h1>{this.state.recipe.title}</h1>\r\n              <img src={this.state.recipe.image} alt={this.state.recipe.image} />\r\n            </div>\r\n            <div>\r\n              <div>\r\n                <i className=\"fas fa-heartbeat\"></i>\r\n                <span>{this.state.recipe.healthScore}</span>\r\n              </div>\r\n              <div>\r\n                <i className=\"fas fa-utensils\"></i>\r\n                <span>{this.state.recipe.servings}</span>\r\n              </div>\r\n              <div>\r\n                <i className=\"fas fa-dollar-sign\"></i>\r\n                <span>{this.state.recipe.pricePerServing}</span>\r\n              </div>\r\n              <div>\r\n                <a href={this.state.recipe.source}>{this.state.recipe.sourceName}</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            {Object.keys(this.state.recipe.steps).map(k => {\r\n              const s = this.state.recipe.steps[k];\r\n              return (\r\n                <div key={`step_${k}`} className=\"step\">\r\n                  <div>\r\n                    <span>{`Step ${k}`}</span>\r\n                    <span>{s.text}</span>\r\n                  </div>\r\n                  <div>\r\n                    {s.ingredients &&\r\n                      <div className=\"extra\" >\r\n                        <span>Ingredients</span>\r\n                        <div>\r\n                          {s.ingredients.map((i, index) => (\r\n                            <div key={`ing_${index}`} className=\"ingredient\">\r\n                              <span>{i.name}</span>\r\n                              <span>{(i.meta.meta && i.meta.meta.join(', ')) || '-'}</span>\r\n                              <img src={`https://spoonacular.com/cdn/ingredients_100x100/${i.image}`} alt={i.image} />\r\n                              <span>Quantity</span>\r\n                              <span>{`${i.meta.amount} ${i.meta.measures_metric_unitLong}`}</span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    }\r\n                    {s.equipment &&\r\n                      <div className=\"extra\">\r\n                        <span>Equipment</span>\r\n                        <div>\r\n                          {s.equipment.map((e, index) => (\r\n                            <div key={`equ_${index}`} className=\"equipment\">\r\n                              <span>{e.name}</span>\r\n                              <img src={`https://spoonacular.com/cdn/equipment_100x100/${e.image}`} alt={e.image} />\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    }\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      toRender\r\n    );\r\n  }\r\n}\r\n\r\nRecipe.propTypes = {\r\n  recipe: PropTypes.object.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './login.css';\r\n\r\nexport default class Login extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"login-container\">\r\n        <div>\r\n          <div id=\"logo\"></div>\r\n          <input type=\"text\" placeholder=\"username\" />\r\n          <input type=\"password\" placeholder=\"password\" />\r\n          <div>\r\n            <button>Login</button>\r\n            <button>Sign up</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Ingredient extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      active: false\r\n    };\r\n    this.selectIngredientHandler = this.selectIngredientHandler.bind(this);\r\n  }\r\n\r\n  selectIngredientHandler() {\r\n    this.setState((prevState) => ({ active: !prevState.active }), () => {\r\n      this.props.newIngredientHandler(this.props.ingredient, this.state.active);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        key={`ing_${this.props.ingredient.identity}`}\r\n        className={`ingredient-item ${(this.state.active ? 'active' : '')}`}\r\n        onClick={this.selectIngredientHandler}>\r\n        <img src={`https://spoonacular.com/cdn/ingredients_100x100/${this.props.ingredient.image}`} alt={this.props.ingredient.image} />\r\n        <span>{this.props.ingredient.name}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIngredient.propTypes = {\r\n  ingredient: PropTypes.object.isRequired,\r\n  newIngredientHandler: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './result.css';\r\n\r\nexport default class Result extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ingredients: {},\r\n      recipes: []\r\n    }\r\n    this.updateIngredient = this.updateIngredient.bind(this);\r\n    this.search = this.search.bind(this);\r\n    this.clickRecipe = this.clickRecipe.bind(this);\r\n  }\r\n\r\n  updateIngredient(ingredient, active) {\r\n    if (active) {\r\n      this.setState((prevState) => {\r\n        prevState.ingredients[ingredient.identity] = { ...ingredient, pos: Object.keys(prevState.ingredients).length };\r\n        return prevState;\r\n      });\r\n    } else {\r\n      this.setState((prevState) => {\r\n        delete prevState.ingredients[ingredient.identity];\r\n        return prevState;\r\n      });\r\n    }\r\n  }\r\n\r\n  search() {\r\n    const api = 'http://localhost:3001/api/recipes/search';\r\n    (async () => {\r\n      const req = await fetch(api, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          ingredients: Object.values(this.state.ingredients).map(i => i.name)\r\n        })\r\n      });\r\n      const data = await req.json();\r\n      this.setState({ recipes: data.map(r => r._fields).sort((a, b) => (a[1] - b[1])).map(d => ({ ...d[0].properties, extras: d[1] })) })\r\n    })();\r\n  }\r\n\r\n  clickRecipe(recipe) {\r\n    return () => this.props.goToRecipe(recipe);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"result-container\">\r\n        <div>\r\n          {Object.values(this.state.ingredients).length !== 0 && Object.values(this.state.ingredients)\r\n            .sort((a, b) => a.pos - b.pos)\r\n            .map(i => (\r\n              <span className=\"badge\" key={i.identity}>{i.name}</span>\r\n            ))}\r\n          {Object.values(this.state.ingredients).length === 0 &&\r\n            <span id=\"info\">\r\n              Add a Search Criteria\r\n          </span>\r\n          }\r\n        </div>\r\n        <div id=\"recipes-results-container\">\r\n          {this.state.recipes.map((r, index) => (\r\n            <div className=\"recipe-result-item\" key={`rec_${index}`} onClick={this.clickRecipe(r)}>\r\n              <img src={r.image} alt={r.image} />\r\n              <span>{r.title}</span>\r\n              <span>Extra Ingredients: {r.extras}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button onClick={this.search}><i className=\"fas fa-search\"></i></button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResult.propTypes = {\r\n  goToRecipe: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './search.css';\r\nimport Ingredient from './Ingredient/Ingredient';\r\nimport Result from './Result/Result';\r\n\r\nexport default class Search extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchCriteria: 1,\r\n      ingredients: []\r\n    };\r\n    this.searchCriteriaHandler = this.searchCriteriaHandler.bind(this);\r\n    this.newIngredientHandler = this.newIngredientHandler.bind(this);\r\n    this.resultRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const api = 'http://localhost:3001/api/ingredients/all';\r\n    (async () => {\r\n      const req = await fetch(api);\r\n      const data = await req.json();\r\n      const ings = data.records\r\n        .map(i => ({ ...i._fields[0].properties, identity: i._fields[0].identity }))\r\n        .sort((a, b) => (a.name.toLowerCase() < b.name.toLowerCase()) ? -1 : 1);\r\n\r\n      this.setState({ ingredients: ings });\r\n    })();\r\n  }\r\n\r\n  searchCriteriaHandler(sc) {\r\n    return () => this.setState({ searchCriteria: sc });\r\n  }\r\n\r\n  newIngredientHandler(ingredient, active) {\r\n    this.resultRef.updateIngredient(ingredient, active);\r\n  }\r\n\r\n  render() {\r\n    let searchInput = (\r\n      <div id=\"name-search-container\">\r\n        <div>\r\n          <input placeholder=\"Recipe Name\" />\r\n          <button>Search</button>\r\n        </div>\r\n      </div>\r\n    );\r\n    if (this.state.searchCriteria === 1) {\r\n      searchInput = (\r\n        <div id=\"ingredients-search-container\">\r\n          {this.state.ingredients.length===0  && \r\n          <span>Cargando...</span>}\r\n          {this.state.ingredients.map((i, index) => (\r\n            <Ingredient ingredient={i} key={`ing_${index}`} newIngredientHandler={this.newIngredientHandler} />\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div id=\"search-container\">\r\n        <div>\r\n          <div>\r\n            {/* <button onClick={this.searchCriteriaHandler(0)} className={this.state.searchCriteria === 0 ? 'active' : ''}>By Name</button> */}\r\n            <button onClick={this.searchCriteriaHandler(1)} className={this.state.searchCriteria === 1 ? 'active' : ''}>By Ingredients</button>\r\n          </div>\r\n          {searchInput}\r\n        </div>\r\n        <div>\r\n          <Result ref={(r) => this.resultRef = r} goToRecipe={this.props.goToRecipe} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearch.propTypes = {\r\n  goToRecipe: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Create extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Create a new recipe!</h1>\r\n        <div>\r\n          <input placeholder=\"Title\" />\r\n          <input placeholder=\"Image Name\" />\r\n          <input type=\"number\" placeholder=\"Health Score\" />\r\n          <input type=\"number\" placeholder=\"Servings\" />\r\n          <input type=\"number\" placeholder=\"Price Per Serving\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreate.propTypes = {\r\n\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Explorer from './Explorer/Explorer';\r\nimport Recipe from './Recipe/Recipe';\r\nimport Login from './Login/Login';\r\nimport Search from './Search/Search';\r\nimport Create from './Create/Create';\r\n\r\nexport default class App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      actualMenu: 1,\r\n      actualRecipe: undefined\r\n    };\r\n    this.goToRecipe = this.goToRecipe.bind(this);\r\n  }\r\n\r\n  goTo = (menu) => {\r\n    return () => this.setState({ actualMenu: menu });\r\n  };\r\n\r\n  goToRecipe(r) {\r\n    this.setState({\r\n      actualMenu: 3,\r\n      actualRecipe: r\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let toRender = undefined;\r\n    switch (this.state.actualMenu) {\r\n      case 0:\r\n        toRender = <Login />;\r\n        break;\r\n      case 1:\r\n        toRender = <Explorer goToRecipe={this.goToRecipe} />;\r\n        break;\r\n      case 2:\r\n        toRender = <Create/>;\r\n        break;\r\n      case 3:\r\n        toRender = <Recipe recipe={this.state.actualRecipe} />;\r\n        break;\r\n      case 4:\r\n        toRender = <Search goToRecipe={this.goToRecipe} />;\r\n        break;\r\n      default:\r\n        toRender = (\r\n          <div>\r\n            Hangryff\r\n          </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div id=\"header\">\r\n          <div id=\"icon\"></div>\r\n          <div>\r\n            <button onClick={this.goTo(0)} className={this.state.actualMenu === 0 ? 'active' : ''}>Login</button>\r\n            <button onClick={this.goTo(1)} className={this.state.actualMenu === 1 || this.state.actualMenu === 3 ? 'active' : ''}>Explorer</button>\r\n            {/* <button onClick={this.goTo(2)} className={this.state.actualMenu === 2 ? 'active' : ''}>Create</button> */}\r\n            <button onClick={this.goTo(4)} className={this.state.actualMenu === 4 ? 'active' : ''}>Search</button>\r\n          </div>\r\n        </div>\r\n        <div>{toRender}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}